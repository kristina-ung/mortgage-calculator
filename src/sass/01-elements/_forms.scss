form {
  font-size: var(--font-size--body);
}

label {
  display: inline-block;
  margin-block-end: 0.75rem;
  color: var(--color--neutral-slate-700);
}

input {
  padding: 0 1rem;
  font-weight: var(--font-weight--bold);
  background-color: transparent;
  border: none;
  width: 100%;
}

fieldset {
  border: none;
  padding: 0;

  legend {
    margin-block-end: 0.75rem;
    color: var(--color--neutral-slate-700);
  }
}

.form {
  &__item {
    margin-block-end: 1.5rem;
  }

  &__group {
    display: grid;
    grid-column-gap: 1.5rem;
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }

  &__input-container {
    display: flex;
    border: 1px solid var(--color--neutral-slate-900);
    border-radius: 6px;

    input {
      // Add a negative offset so that the green focus-within state can be seen too.
      outline-offset: -0.2em;
    }

    span {
      background-color: var(--color--neutral-slate-100);
      color: var(--color--neutral-slate-700);
      font-weight: var(--font-weight--bold);
      padding: 0.9rem 1rem;
    }

    // Change the border radius depending on the order of elements.
    & > span:first-child {
      border-radius: 6px 0 0 6px;
    }

    & > span:last-child {
      border-radius: 0 6px 6px 0;
    }

    &:focus-within {
      border-color: var(--color--primary);
      span {
        background-color: var(--color--primary);
      }
    }
  }

  &__error-container {
    border-color: var(--color--secondary);

    span {
      background-color: var(--color--secondary);
      color: #fff;
    }
  }

  &__error-message {
    color: var(--color--secondary);
    font-size: var(--font-size-800);
    margin-block-start: 1rem;
  }

  // Create custom radio elements that replace the browser defaults.
  &__option {
    position: relative;
    border: solid 1px var(--color--neutral-slate-700);
    border-radius: 6px;
    padding: 0.5rem 1rem;
    margin-block-end: 0.65rem;
    display: flex;

    &:focus-within {
      border-color: var(--color--primary);
      background-color: var(--color--primary-transparent);
      outline-offset: 0.2em;
    }

    &:hover {
      border-color: var(--color--primary);
    }

    label {
      color: var(--color--neutral-slate-900);
      font-size: 1.15rem;
      font-weight: var(--font-weight--bold);
      padding: 0.25rem 2.5rem;
      position: relative;
      width: 100%;

      display: flex;
      align-items: center;
      margin-block-end: 0;
    }

    input {
      border: 0;
      height: 1px;
      margin: -1px;
      opacity: 0;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
      max-width: 100%;
    }

    input[type='radio'] {
      + label {
        // The before element holds the empty radio button circle.
        &::before {
          border: 2px solid var(--color--neutral-slate-700);
          background: #fff;
          content: '';
          position: absolute;
          left: 0;
          height: 1.15em;
          width: 1.15em;
          border-radius: 50%;
        }

        // The after element holds the solid circle that indicates a selection.
        &::after {
          content: '';
          background-color: var(--color--primary);
          border-radius: 50%;
          position: absolute;
          // Center align the selection circle.
          // Values below are from dividing the circle height by 2 & 4.
          left: calc(0.575em - 0.28em);
          height: 0.575em;
          width: 0.575em;
          opacity: 0;
          transition: opacity 0.2s ease-in-out;
        }
      }

      // Show the solid circle when the now-hidden form element is selected.
      &:checked {
        & + label::before {
          border-color: var(--color--primary);
        }
        & + label::after {
          opacity: 1;
        }
      }

      // Recreate the focus state that is on the hidden form element.
      &:focus-visible + label::before {
        outline: 0.15em auto var(--color--neutral-slate-900);
        outline: 0.15em auto -webkit-focus-ring-color;
        outline-offset: 0.15em;
      }
    }
  }
}
